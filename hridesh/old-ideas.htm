<!--
<LI><a href="http://www.cs.iastate.edu/~design/projects/panini/"><B>Panini</B></a> 
project, where our aim is to achieve a synergy between modularity and concurrency goals
such that if programmers structure their system to improve modularity in its design,
they get concurrency for free. 
To that end, in our 
<a href="http://www.cs.iastate.edu/~design/papers/GPCE-10/">GPCE'10 paper</a>
we describe a language-based approach that helps software system using 
event-driven style.
Our <a href="http://www.cs.iastate.edu/~design/papers/ONWARD-10/">Onward!'10 paper</a>
describes implicitly concurrent version of well-known Gang-of-Four design patterns.
Use of our design pattern framework implicitly exposes concurrency in program design. 
<!--<span style="background-color:red"><sup>Hot!!</sup></span>-->
</LI>

<LI><B>Translucid contracts</B> that allows programmers to write modular specification 
of <EM>aspect-oriented interfaces</EM> and that allows one to modularly reason about 
control effects in aspect-oriented programs. 
More details in our <a href="http://www.cs.iastate.edu/~design/papers/AOSD-11">AOSD'11</a> 
paper and from the Ptolemy project's web-page that also has <a href="http://www.cs.iastate.edu/~ptolemy">download for our compiler</a>.
</LI>-->
</UL>

